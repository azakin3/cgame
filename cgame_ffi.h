
/* 
 * C interface visible from Lua
 * 
 * automatically generated by gen_cgame_ffi.lua from 'script_begin/script_end'
 * blocks and 'script_export' lines
 *
 * pass the string 'cgame_ffi' to ffi.cdef(...) in LuaJIT
 */

static const char cgame_ffi[] =
    /* game.h */

    "void game_quit();\n"

    /* vec2.h */

    "typedef struct Vec2 Vec2;\n"
    "struct Vec2 { float x; float y; };\n"

    "Vec2 vec2(float x, float y);\n"

    "Vec2 vec2_add(Vec2 u, Vec2 v);\n"
    "Vec2 vec2_scalar_mul(Vec2 v, float f);\n"

    "Vec2 vec2_rot(Vec2 v, float rot);\n"

    /* mat3.h */

    "typedef struct Mat3 Mat3;\n"
    "struct Mat3 { float m[3][3]; };\n"

    "Mat3 mat3(float m00, float m01, float m02,\n"
    "        float m10, float m11, float m12,\n"
    "        float m20, float m21, float m22);\n"

    "Mat3 mat3_identity(); /* eturns identity matrix */\n"

    "/* matrix that applies scale, rot and trans in order */\n"
    "Mat3 mat3_scaling_rotation_translation(Vec2 scale, float rot, Vec2 trans);\n"

    "Mat3 mat3_inverse(Mat3 m);\n"

    /* entity.h */

    "typedef unsigned int Entity;\n"

    "Entity entity_new();\n"

    /* transform.h */

    "void transform_add(Entity ent);\n"
    "void transform_remove(Entity ent);\n"

    "void transform_set_position(Entity ent, Vec2 pos);\n"
    "Vec2 transform_get_position(Entity ent);\n"
    "void transform_translate(Entity ent, Vec2 trans);\n"

    "void transform_set_rotation(Entity ent, float rot);\n"
    "float transform_get_rotation(Entity ent);\n"
    "void transform_rotate(Entity ent, float rot);\n"

    "void transform_set_scale(Entity ent, Vec2 scale);\n"
    "Vec2 transform_get_scale(Entity ent);\n"

    "Mat3 transform_get_world_matrix(Entity ent);\n"

    /* camera.h */

    "void camera_add(Entity ent);\n"
    "void camera_remove();\n"
    "Entity camera_get();\n"

    "void camera_set_viewport_size(Vec2 dim); /* viewport size in world units */\n"
    "Mat3 camera_get_inverse_view_matrix();\n"

    /* sprite.h */

    "void sprite_add(Entity ent);\n"
    "void sprite_remove(Entity ent);\n"

    "void sprite_set_cell(Entity ent, Vec2 cell);\n"
    "void sprite_set_size(Entity ent, Vec2 size);\n"

    /* test/keyboard_controlled.h */

    "void keyboard_controlled_add(Entity ent);\n"
    "void keyboard_controlled_remove(Entity ent);\n"


    ;
